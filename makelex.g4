lexer grammar makelex;
COMMENT: '#' ~('\r' | '\n')* '\r'? '\n' -> skip;

WS: [ ]  -> skip;
SKIPLI: '\\' '\r'? '\n' ('\t'|' ')* -> skip;
INCLUDE: 'include';
DEFINE: 'define';
ENDEF: 'endef';
EQUAL: '=';
TARGETSEP: ':' ':'?;
NL: '\r'?'\n';
TAB: '\t';
SEMICOL: ';';
VARSEP: ':' ':'? '=';
VARNOT: '!=';
PLUSEQUAL: '+=';
ELEQUAL: '?=';
EXPORT: 'export';
UNEXPORT: 'unexport';
VPATH: 'vpath';
OVERRIDE: 'override';
ENDIF: 'endif';
ELSE: 'else';
IF: 'ifeq';
IFNEQ: 'ifneq';
IFDEF: 'ifdef';
IFNDEF: 'ifndef';
LBRACE: '(';
RBRACE: ')';
PIPE: '|';
VARTOKEN: '$'+;
COMMA: ',';
STRING: '"' ~('"')* '"';
SSTRING: '\'' ~('\'')* '\'';
DASH: '-';
PLUS : '+';
ID: ~(' '  | '(' | ')' | '$' | '\t' | '\r' | '\n' | '=' | '+' |',' | ';')+;